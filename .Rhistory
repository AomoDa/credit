axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = 0,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = 0,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = s_beta,y0 = 0,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
segments(x0 = 0,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
abline(v=0)
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1.1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = 0,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = 0,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = s_beta,y0 = 0,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
segments(x0 = 0,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
abline(h=0,lty=4)
abline(h=0,lty=4,col="orange")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1.1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = 0,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = 0,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = s_beta,y0 = 0,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
segments(x0 = 0,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
abline(h=0,lty=4,col="orange")
abline(h=1,lty=4,col="orange")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = 0,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = 0,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = s_beta,y0 = 0,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
segments(x0 = 0,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
abline(h=0,lty=4,col="orange")
abline(h=1,lty=4,col="orange")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=2)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=2)
abline(h=0,lty=4,col="orange")
abline(h=1,lty=4,col="orange")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = 1.5,y = 0.15,labels = "增长期")
text(x = 1.5,y = 0.15,labels = "增长期")
text(x = 1.5,y = 0.3,labels = "增长期")
text(x = 1.5,y = 0.5,labels = "增长期")
text(x = 1.5,y = 0.3,labels = "增长期")
text(x = 1.5,y = 0.3,labels = "增长期",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = 1.5,y = 0.5,labels = "A-阶段",family="STXihei")
text(x = 5,y = 0.5,labels = "B-阶段",family="STXihei")
text(x = 10,y = 0.5,labels = "C-阶段",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A-阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B-阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C-阶段",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]"%") ,expression('Y'[beta]"%"),"100%"),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
# 2
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha],"%") ,expression('Y'[beta],"%"),"100%"),las=1)
expression('Y'[beta]'%')
expression('Y'[beta]'x')
expression('Y'[beta]'a')
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),"100%"),las=1)
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),"100%"),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30))
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30),main="激励曲线示意图",family="STXihei")
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
shiny::runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
plot_jili_sim_example <- function() {
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30),main="激励曲线示意图",family="STXihei")
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
segments(x0 = s_alpha,y0 = -1,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = s_c_alpha,x1 = s_alpha,y1 = s_c_alpha,col="red",lty=4)
segments(x0 = s_beta,y0 = -1,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = s_c_beta,x1 = s_beta,y1 = s_c_beta,col="blue",lty=4)
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
text(x = alpha/2,y = 0.5,labels = "A阶段",family="STXihei")
text(x = alpha+(beta-alpha)/2,y = 0.5,labels = "B阶段",family="STXihei")
text(x = 20,y = 0.5,labels = "C阶段",family="STXihei")
}
plot_jili_sim_example()
alpha = 3
beta = 10
x = seq(from=0, to=30, by=0.1)
y = growS(x,alpha = alpha,beta = beta,c_alpha=0.6,c_beta=0.9)
sm = smooth.spline(x, y, spar=0.4)
s_alpha = sm$x[which(sm$y>=0.6)[1]]
s_beta = sm$x[which(sm$y>=0.9)[1]]
s_c_alpha = sm$y[sm$x==s_alpha]
s_c_beta = sm$y[sm$x==s_beta]
plot(sm,type="l",xlab="",ylab="",axes = FALSE,ylim=c(0,1),xlim=c(0,30),main="激励曲线示意图",family="STXihei")
axis(1, c(0,s_alpha,s_beta),c(0,expression(alpha),expression(beta)))
axis(2, c(0,s_c_alpha,s_c_beta,1),c(0,expression('Y'[alpha]) ,expression('Y'[beta]),1),las=1)
box()
?box
graphics::box()
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
numericInput()
?numericInput
expression(alpha)
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
growS <- Vectorize(function(x,alpha,beta,c_alpha=0.9,c_beta=0.98,intercept=0){
a1 = (c_alpha ) / (exp(alpha) - exp(0))
b1 = c_alpha - a1 * exp( alpha)
a2 = ( c_beta - c_alpha ) / log( beta / alpha )
b2 = c_beta - a2 * log( beta )
a3 = (1 - c_beta) * 2
b3 = 1 - a3
if (x <= intercept){
return(0)
} else if(x <= alpha){
rlt = a1 * exp(x) + b1
}else if ( x <= beta){
rlt = a2 * log(x) + b2
}else{
rlt = a3 / (1 +exp((beta - x)/ (alpha +beta))) + b3
}
},vectorize.args="x")
plot_jili_sim_test <- function(alpha,beta,c_alpha,c_beta){
alpha = as.numeric(alpha)
beta = as.numeric(beta)
c_alpha = as.numeric(c_alpha)
c_beta = as.numeric(c_beta)
x=seq(from=0,to=beta*2,by=0.1)
y=growS(x,alpha,beta,c_alpha,c_beta)
plot(x,y,type="l")
segments(x0 = alpha,y0 = -1,x1 = alpha,y1 = c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = c_alpha,x1 = alpha,y1 = c_alpha,col="red",lty=4)
segments(x0 = beta,y0 = -1,x1 = beta,y1 = c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = c_beta,x1 = beta,y1 = c_beta,col="blue",lty=4)
}
plot_jili_sim_test(alpha = 3,beta = 10,c_alpha = 0.6,c_beta = 0.9)
runApp('Documents/credit/credit')
y=1:3
y
diff(y)
diff(1,3,7)
diff(c(1,3,7))
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
alpha=3
c_alpha=0.6
beta=10
c_beta=0.9
alpha = as.numeric(alpha)
beta = as.numeric(beta)
c_alpha = as.numeric(c_alpha)
c_beta = as.numeric(c_beta)
x=seq(from=0,to=beta*2,by=0.1)
y=growS(x,alpha,beta,c_alpha,c_beta)
plot(x,y,type="l",xlab="",ylab="",ylim=c(0,1))
abline(h=0,lty=2,col="orange")
abline(h=1,lty=2,col="orange")
segments(x0 = alpha,y0 = -1,x1 = alpha,y1 = c_alpha,col="red",lty=4)
segments(x0 = -1,y0 = c_alpha,x1 = alpha,y1 = c_alpha,col="red",lty=4)
segments(x0 = beta,y0 = -1,x1 = beta,y1 = c_beta,col="blue",lty=4)
segments(x0 = -1,y0 = c_beta,x1 = beta,y1 = c_beta,col="blue",lty=4)
y
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
library(DT)
runApp('Documents/credit/credit')
renderDT()
DTOutput()
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
/DTOutput
?DTOutput
runApp('Documents/credit/credit')
alpha = as.numeric(alpha)
beta = as.numeric(beta)
c_alpha = as.numeric(c_alpha)
c_beta = as.numeric(c_beta)
x=seq(from=1,to=beta*2,by=0)
y=growS(x,alpha,beta,c_alpha,c_beta)
rlt=data.frame(
"变量" = x,
"得分比"=y,
"环比"=c(NA,diff(y))
)
alpha = as.numeric(alpha)
beta = as.numeric(beta)
c_alpha = as.numeric(c_alpha)
c_beta = as.numeric(c_beta)
x=seq(from=1,to=beta*2,by=1)
y=growS(x,alpha,beta,c_alpha,c_beta)
rlt=data.frame(
"变量" = x,
"得分比"=y,
"环比"=c(NA,diff(y))
)
rlt
alpha = as.numeric(alpha)
beta = as.numeric(beta)
c_alpha = as.numeric(c_alpha)
c_beta = as.numeric(c_beta)
x=seq(from=1,to=beta*2,by=1)
y=growS(x,alpha,beta,c_alpha,c_beta)
rlt=data.frame(
"变量" = x,
"得分比"=round(y,4),
"环比"=round(c(NA,diff(y)),4)
)
rlt
runApp('Documents/credit/credit')
runApp()
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
runApp('Documents/credit/credit')
?chisq.test()
setwd("Documents/credit/credit/")
library(shiny)
library(shinydashboard)
library(DT)
library(dplyr)
library(readxl)
library(writexl)
library(stringr)
library(DT)
library(logger)
library(psych)
# source
source("env.R")
source("func.R")
source("data/clean.R")
source("data/clean.R")
source("data/clean.R")
source("data/clean.R")
source("data/score.R")
source("data/calculate.R")
source("data/calculate.R")
runApp()
